name: Check Broken links

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # runs at 00:00 UTC every day
  push:
    branches:
      - main
      - gh-pages
  pull_request:
    branches:
      - main
      - gh-pages

jobs:
  Links:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [main, gh-pages] # Define the branches to test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }} # Use matrix to check out the correct branch

      - name: Add NordVPN repository and install NordVPN CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https
          sudo wget -qnc https://repo.nordvpn.com/gpg/nordvpn_public.asc -O /etc/apt/trusted.gpg.d/nordvpn.asc
          echo "deb https://repo.nordvpn.com/deb/nordvpn/debian stable main" | sudo tee /etc/apt/sources.list.d/nordvpn.list
          sudo apt-get update
          sudo apt-get install -y nordvpn
          sudo nordvpn login --token ${{ secrets.NORDVPN_TOKEN }}

      - name: Configure NordVPN permissions
        run: |
          sudo groupadd nordvpn || true
          sudo usermod -aG nordvpn $USER
          # Restart the necessary services to apply group changes without reboot
          sudo systemctl restart nordvpnd
          sudo systemctl restart NetworkManager

      - name: Connect to NordVPN
        run: |
          nordvpn connect

      - name: Download and install lychee
        run: |
          LYCHEE_URL=$(curl -s https://api.github.com/repos/lycheeverse/lychee/releases/latest | grep "browser_download_url" | grep "x86_64-unknown-linux-gnu.tar.gz" | cut -d '"' -f 4)
          curl -L $LYCHEE_URL -o lychee.tar.gz
          tar xzf lychee.tar.gz
          sudo mv lychee /usr/local/bin

      - name: Test Markdown and HTML links with retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 900
          max_attempts: 5
          command: |
            rm -rf .lycheecache
            lychee \
            --scheme 'https' \
            --timeout 60 \
            --insecure \
            --accept 401,403,429,500,502,999 \
            --exclude-all-private \
            --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com|tesla\.com)' \
            --exclude-path '**/ci.yaml' \
            --github-token ${{ secrets.GITHUB_TOKEN }} \
            --header "User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.183 Safari/537.36" \
            './**/*.md' \
            './**/*.html'

      - name: Download Ultralytics Website
        if: matrix.branch == 'main'
        run: |
          mkdir ultralytics_website
          wget -P ultralytics_website \
               --recursive \
               --no-parent \
               --adjust-extension \
               --reject "*.jpg*,*.jpeg*,*.png*,*.gif*,*.webp*,*.svg*,*.txt" \
               --exclude-directories="/zh/,/ko/,/ja/,/ru/,/de/,/fr/,/es/,/pt/,/tr/,/vi/,/ar/,/it/,/nl/,/hi/" \
               https://www.ultralytics.com/ || true

      - name: Run Broken Link Checks on Ultralytics Website
        if: matrix.branch == 'main'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 900
          max_attempts: 5
          command: |
            rm -rf .lycheecache
            lychee \
            --scheme 'https' \
            --timeout 60 \
            --insecure \
            --accept 401,403,429,500,502,999 \
            --exclude-all-private \
            --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com|tesla\.com|wellfound\.com|.*\.cloudfunctions\.net|0\.0\.0\.0:5543/predict/from_files)' \
            --exclude-path '**/ci.yaml' \
            --github-token ${{ secrets.GITHUB_TOKEN }} \
            --header "User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.183 Safari/537.36" \
            './ultralytics_website/**/*.html'

      - name: Test Website, Markdown, HTML, YAML, Python, and Notebook links with retry
        if: github.event_name == 'workflow_dispatch'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          retry_wait_seconds: 900
          max_attempts: 5
          command: |
            rm -rf .lycheecache
            lychee \
            --scheme 'https' \
            --timeout 60 \
            --insecure \
            --accept 401,403,429,500,502,999 \
            --exclude-all-private \
            --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com|tesla\.com)' \
            --exclude-path '**/ci.yaml' \
            --github-token ${{ secrets.GITHUB_TOKEN }} \
            --header "User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.6478.183 Safari/537.36" \
            './**/*.md' \
            './**/*.html' \
            './**/*.yml' \
            './**/*.yaml' \
            './**/*.py' \
            './**/*.ipynb'

      - name: Disconnect from NordVPN
        if: always()
        run: nordvpn disconnect

  Summary:
    runs-on: ubuntu-latest
    needs: [Links] # Add job names that you want to check for failure
    if: always() # This ensures the job runs even if previous jobs fail
    steps:
      - name: Check for failure and notify
        if: needs.Links.result == 'failure' && github.repository == 'ultralytics/docs' && (github.event_name == 'schedule' || github.event_name == 'push')
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {"text": "<!channel> GitHub Actions error for ${{ github.workflow }} ‚ùå\n\n\n*Repository:* https://github.com/${{ github.repository }}\n*Action:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n*Author:* ${{ github.actor }}\n*Event:* ${{ github.event_name }}\n"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_WEBSITE }}
