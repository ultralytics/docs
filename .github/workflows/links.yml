# Ultralytics YOLO üöÄ, AGPL-3.0 license
# Continuous Integration (CI) GitHub Actions tests broken link checker using https://github.com/lycheeverse/lychee
# Ignores the following status codes to reduce false positives:
#   - 403(OpenVINO, 'forbidden')
#   - 429(Instagram, 'too many requests')
#   - 500(Zenodo, 'cached')
#   - 502(Zenodo, 'bad gateway')
#   - 999(LinkedIn, 'unknown status code')

name: Check Broken links

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # runs at 00:00 UTC every day
  push:
    branches:
      - main
      - gh-pages
  pull_request:
    branches:
      - main
      - gh-pages

jobs:
  Links:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [main, gh-pages]  # Define the branches to test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}  # Use matrix to check out the correct branch

      - name: Download and install lychee
        run: |
          LYCHEE_URL=$(curl -s https://api.github.com/repos/lycheeverse/lychee/releases/latest | grep "browser_download_url" | grep "x86_64-unknown-linux-gnu.tar.gz" | cut -d '"' -f 4)
          curl -L $LYCHEE_URL -o lychee.tar.gz
          tar xzf lychee.tar.gz
          sudo mv lychee /usr/local/bin

      - name: Test Markdown and HTML links with retry
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          retry_wait_seconds: 60
          max_attempts: 3
          command: lychee --accept 403,429,500,502,999 --exclude-loopback --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com)' --exclude-path '**/ci.yaml' --exclude-mail --github-token ${{ secrets.GITHUB_TOKEN }} './**/*.md' './**/*.html'

      - name: Download Ultralytics Website
        if: matrix.branch == 'main'
        run: |
          mkdir ultralytics_website
          wget -P ultralytics_website --recursive --no-parent --adjust-extension --reject *.jpg*,*.jpeg*,*.png*,*.gif*,*.webp*,*.svg*,*.txt https://www.ultralytics.com || true

      - name: Run Broken Link Checks on Ultralytics Website
        if: matrix.branch == 'main'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          retry_wait_seconds: 60
          max_attempts: 3
          command: lychee --accept 403,429,500,502,999 --exclude-loopback --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com|wellfound\.com|.*\.cloudfunctions\.net|0\.0\.0\.0:5543/predict/from_files)' --exclude-path '**/ci.yaml' --exclude-mail --github-token ${{ secrets.GITHUB_TOKEN }} './ultralytics_website/**/*.html'

      - name: Test Website, Markdown, HTML, YAML, Python and Notebook links with retry
        if: github.event_name == 'workflow_dispatch'
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          retry_wait_seconds: 60
          max_attempts: 3
          command: lychee --accept 429,999 --exclude-loopback --exclude 'https?://(www\.)?(linkedin\.com|twitter\.com|instagram\.com|kaggle\.com|tiktok\.com|fonts\.gstatic\.com|fonts\.googleapis\.com|url\.com)' --exclude-path '**/ci.yaml' --exclude-mail --github-token ${{ secrets.GITHUB_TOKEN }} './**/*.md' './**/*.html' './**/*.yml' './**/*.yaml' './**/*.py' './**/*.ipynb'


  Summary:
    runs-on: ubuntu-latest
    needs: [Links] # Add job names that you want to check for failure
    if: always() # This ensures the job runs even if previous jobs fail
    steps:
      - name: Check for failure and notify
        if: needs.Links.result == 'failure' && github.repository == 'ultralytics/docs' && (github.event_name == 'schedule' || github.event_name == 'push')
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {"text": "<!channel> GitHub Actions error for ${{ github.workflow }} ‚ùå\n\n\n*Repository:* https://github.com/${{ github.repository }}\n*Action:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n*Author:* ${{ github.actor }}\n*Event:* ${{ github.event_name }}\n"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_WEBSITE }}
